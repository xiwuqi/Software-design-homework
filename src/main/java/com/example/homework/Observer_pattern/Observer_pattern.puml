@startuml

interface Observer {
    void update(String productName, double newPrice)
}

class Member {
    - memberName : String
    __
    + Member(memberName : String)
    + update(productName : String, newPrice : double) : void
}

class Product {
    - name : String
    - price : double
    - observers : List<Observer>
    __
    + Product(name : String, price : double)
    + addObserver(observer : Observer) : void
    + removeObserver(observer : Observer) : void
    + setName(name : String) : void
    + setPrice(price : double) : void
    - notifyObservers() : void
}

class ObserverPatternDemo {
}

Member ..|> Observer : implements
Product --> "0..*" Observer : observers
ObserverPatternDemo ..-> Member : creates >
ObserverPatternDemo ..-> Product : creates >


@enduml
